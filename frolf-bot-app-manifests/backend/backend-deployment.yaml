# Frolf Bot Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frolf-bot-backend
  namespace: frolf-bot
  labels:
    app: frolf-bot-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frolf-bot-backend
  template:
    metadata:
      labels:
        app: frolf-bot-backend
    spec:
      imagePullSecrets:
        - name: gcp-artifact-registry
      # Add init container to wait for PostgreSQL
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.35
          command: ["sh", "-c"]
          args:
            - |
              echo "Waiting for PostgreSQL to be ready..."
              until nc -z postgres-frolf-postgresql.frolf-bot.svc.cluster.local 5432; do
                echo "PostgreSQL is not ready yet. Waiting 5 seconds..."
                sleep 5
              done
              echo "PostgreSQL is ready!"

              echo "Waiting for NATS to be ready..."
              until nc -z nats.frolf-bot.svc.cluster.local 4222; do
                echo "NATS is not ready yet. Waiting 5 seconds..."
                sleep 5
              done
              echo "NATS is ready!"
      containers:
        - name: backend
          image: us-central1-docker.pkg.dev/resume-portfolio-project/frolf-bot/frolf-bot-5c61470c8a98ccb765b70626593bbb0c:609c00d
          ports:
            - containerPort: 8080
            - containerPort: 6060
          env:
            # Pull DB and NATS credentials from Kubernetes Secrets for security and flexibility
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: DATABASE_URL
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: DB_PORT
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: DB_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: DB_NAME
            - name: POSTGRES_DSN
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: POSTGRES_DSN
            - name: NATS_URL
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: NATS_URL
            # Non-secret environment variables (safe to keep inline)
            - name: ENV
              value: "development"
            - name: ENVIRONMENT
              value: "development"
            - name: LOG_LEVEL
              value: "debug"
            - name: CONFIG_FILE
              value: ""
            - name: AUTO_MIGRATE
              value: "true"
            - name: METRICS_ADDRESS
              value: "tempo.observability.svc.cluster.local:4317"
            - name: METRICS_ENABLED
              value: "false"
            - name: LOKI_URL
              value: "http://loki.observability.svc.cluster.local:3100"
            - name: TEMPO_ENDPOINT
              value: "tempo.observability.svc.cluster.local:4317"
            - name: TEMPO_INSECURE
              value: "true"
            - name: TEMPO_SAMPLE_RATE
              value: "0"
            - name: OTEL_METRICS_EXPORTER
              value: "none"
            - name: OTEL_TRACES_EXPORTER
              value: "none"
            - name: OTEL_LOGS_EXPORTER
              value: "none"
            - name: OTEL_SDK_DISABLED
              value: "true"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: ""
            - name: PPROF_ENABLED
              value: "true"
            - name: PPROF_ADDR
              value: ":6060"
          # Add health checks to ensure proper startup
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 5
          resources:
            requests:
              memory: "128Mi"
              cpu: "150m"
            limits:
              memory: "512Mi"
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: frolf-bot-backend
  namespace: frolf-bot
spec:
  selector:
    app: frolf-bot-backend
  ports:
    - port: 80
      targetPort: 8080
  type: ClusterIP
